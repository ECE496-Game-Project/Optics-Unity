import * as React from 'react';
import { NativeContainerInstance } from '../models/renderer';
import { AsyncContainerInstance, AsyncNativeInstance } from './async/types';
interface RenderOptions {
    hostContainer?: NativeContainerInstance;
    disableHelpers?: boolean;
    mode?: 'legacy' | 'concurrent';
    /**
       Render using the sync reconciler instead of the batch rendering. It is not recommended to change this value.
       Changing this will disable some features like inline rich-text and svg rendering, although it may improve performance for Jint.
    */
    disableBatchRendering?: boolean;
}
export declare function render(element: React.ReactNode, options?: RenderOptions): import("react-reconciler").Reconciler<AsyncContainerInstance, import("./async/types").AsyncInstance, import("./async/types").AsyncInstance, AsyncNativeInstance, import("../..").ReactUnity.IReactComponent> | import("react-reconciler").Reconciler<import("../..").ReactUnity.IReactComponent, import("../..").ReactUnity.IReactComponent, import("../..").ReactUnity.ITextComponent, import("../..").ReactUnity.IReactComponent, any>;
/**
 * @deprecated Instead, import `render` directly from `@reactunity/renderer`
 */
export declare const Renderer: {
    render(element: React.ReactNode, options?: RenderOptions): import("react-reconciler").Reconciler<AsyncContainerInstance, import("./async/types").AsyncInstance, import("./async/types").AsyncInstance, AsyncNativeInstance, import("../..").ReactUnity.IReactComponent> | import("react-reconciler").Reconciler<import("../..").ReactUnity.IReactComponent, import("../..").ReactUnity.IReactComponent, import("../..").ReactUnity.ITextComponent, import("../..").ReactUnity.IReactComponent, any>;
};
export declare const batchedUpdates: <A, R>(fn: (a: A) => R, a: A) => R;
export declare const flushSync: {
    (): void;
    <R>(fn: () => R): R;
};
export {};
