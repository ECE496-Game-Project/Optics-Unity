var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { ObjectsRepo } from './objects';
var CallbacksRepo = /** @class */ (function (_super) {
    __extends(CallbacksRepo, _super);
    function CallbacksRepo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.call = function (ind, args) {
            var cb = _this.getObject(ind);
            var argsAsList = args;
            var argsAsArray = args;
            if (typeof argsAsArray.Length === 'number') {
                // C# Array
                args = [];
                var length = argsAsArray.Length;
                for (var index = 0; index < length; index++)
                    args.push(argsAsArray.GetValue(index));
            }
            else if (typeof argsAsList.Count === 'number') {
                // C# List
                args = [];
                var length = argsAsList.Count;
                for (var index = 0; index < length; index++)
                    args.push(argsAsList[index]);
            }
            else if (typeof argsAsList.Count === 'function') {
                // C# IList
                args = [];
                var length = argsAsList.Count();
                for (var index = 0; index < length; index++)
                    args.push(argsAsArray.GetValue(index));
            }
            return cb.apply(null, args);
        };
        return _this;
    }
    return CallbacksRepo;
}(ObjectsRepo));
export { CallbacksRepo };
