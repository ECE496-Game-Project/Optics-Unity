import { CallbacksRepo } from './callbacks';
import { ObjectsRepo } from './objects';
export var callbacksRepo = new CallbacksRepo();
export var objectsRepo = new ObjectsRepo();
// Separates properties in 3 categories: regular props, callbacks and non-serializable objects
export function convertPropsToSerializable(props) {
    var res = {};
    for (var key in props) {
        if (Object.prototype.hasOwnProperty.call(props, key)) {
            var value = props[key];
            if (value == null) {
                (res.p || (res.p = {}))[key] = null;
            }
            else if (key === 'style') {
                (res.p || (res.p = {}))[key] = convertPropsToSerializable(value);
            }
            else if (key[0] === 'o' && key[1] === 'n' && typeof value === 'function') {
                var ind = callbacksRepo.addObject(value);
                (res.e || (res.e = {}))[key] = ind;
            }
            else if (typeof value === 'object' || typeof value === 'function') {
                var ind = objectsRepo.addObject(value);
                (res.o || (res.o = {}))[key] = ind;
            }
            else {
                (res.p || (res.p = {}))[key] = value;
            }
        }
    }
    return res;
}
